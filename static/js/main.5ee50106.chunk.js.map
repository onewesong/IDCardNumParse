{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","data","myData","appName","list","undefined","born","sex","check","e","queryData","ipt","target","value","this","forEach","item","region_code","slice","startsWith","length","push","setState","msg","digs","sum","factors","i","lastNumber","IDLastNumberCheck","name","search","searchData","bind","React","Component","Header","props","SearchBar","onChange","placeholder","SearchResult","map","key","val","Born","x","Date","date","getFullYear","now","getTime","ago","parseInt","getIntervalDays","Astro","month","day","substr","PureComponent","Check","Sex","Item","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ee50106.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport myData from './data.json'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: myData,\n      appName: '身份证号码解析',\n      list: undefined,\n      born: undefined,\n      sex: undefined, // 第17位, 奇数为男,偶数为女\n      check: undefined, // 校验结果\n    }\n  }\n  searchData(e) {\n    var queryData = [];\n    var ipt = e.target.value;\n    if (ipt !== '') {\n      this.state.data.forEach(function (item) {\n        var region_code = ipt.slice(0, 6)\n        if (item.startsWith(region_code)) {\n          if (queryData.length < 10) {\n            queryData.push(item);\n          }\n        }\n      });\n    }\n    this.setState({ list: queryData });\n\n    if (ipt.length >= 10) {\n      this.setState({ born: ipt.slice(6,14)})\n    } else {\n      this.setState({ born: undefined })\n    }\n\n    if (ipt.length >= 17) {\n      this.setState({ sex: ipt[16] % 2 === 1 ? \"男\" : \"女\"})\n    } else {\n      this.setState({sex: undefined})\n    }\n\n    var pass, msg = IDLastNumberCheck(ipt)\n    this.setState({check: msg})\n  }\n  render() {\n    return (\n      <div>\n        <Header name={this.state.appName} />\n        <SearchBar search={this.searchData.bind(this)} />\n        {(this.state.check) ? <Check data={this.state.check} />: null}\n        {(this.state.list) ? <SearchResult data={this.state.list} /> : null}\n        {(this.state.born) ? <Born data={this.state.born} />: null}\n        {(this.state.sex) ? <Sex data={this.state.sex} />: null}\n      </div>\n    )\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.name}</h1>\n      </div>\n    )\n  }\n}\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <input onChange={this.props.search} placeholder=\"输入身份证号码\" />\n      </div>\n    )\n  }\n}\n\nclass SearchResult extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h3> 地区 </h3>\n        <ul>\n          {this.props.data.map(function (value) {\n            return <Item key={value} val={value} />\n          })}\n        </ul>\n      </div>\n    )\n\n  }\n\n}\n\nclass Born extends React.Component {\n  render() {\n    var x = new Date()\n    var date = this.props.data\n    return (\n      <div>\n        <h3> 出生日期 </h3>\n        <ul> \n          <li>{date}</li>\n        </ul>\n        <h3> 年龄 </h3>\n        <ul> \n          <li> {x.getFullYear() - date.slice(0,4)}岁 </li>\n          \n          {(date.length >= 8) ? <li> {getIntervalDays(date)}天</li> : null}\n        </ul>\n        <h3> 属相 </h3>\n        <ul> \n          <li> 属{getZodiac(date.slice(0, 4))} </li>\n        </ul>\n        {(date.length >= 8) ? <Astro data={date}/>: null}\n      </div>\n    )\n  }\n}\n\nclass Astro extends React.PureComponent {\n  render() {\n    var date = this.props.data\n    return (\n      <div>\n        <h3> 星座 </h3>\n        <ul>\n          <li> {getAstro(date.slice(4, 6), date.slice(6, 8))} </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass Check extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3> 校验结果 </h3>\n        <ul>\n          <li>{this.props.data}</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass Sex extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3> 性别 </h3>\n        <ul>\n          <li>{this.props.data}</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <li>\n        {this.props.val}\n      </li>\n    )\n  }\n\n}\n\nfunction IDLastNumberCheck(digs) {\n  \n  if (digs.length < 18) {\n    return [false, `小于18位, 还差${18-digs.length}位`]\n  }\n  var sum = 0\n  var factors = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]  // 身份证每一位对应不同系数\n  for (var i = 0; i < 17; i++) {\n    sum += digs[i] * factors[i]\n  }\n  var lastNumber = '10X98765432'[sum % 11]\n  if (lastNumber !== digs[17]) {\n    return [false, `校验位不对, 计算结果为${lastNumber}, 输入为${digs[17]}`]\n  }\n  return [true, \"正确\"]\n  \n}\n\nfunction getAstro(month, day) {\n  var s = \"魔羯水瓶双鱼牡羊金牛双子巨蟹狮子处女天秤天蝎射手魔羯\";\n  var arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\n  return s.substr(month * 2 - (day < arr[month - 1] ? 2 : 0), 2);\n}\n\nfunction getZodiac(year) {\n  var s = \"猴鸡狗猪鼠牛虎兔龙蛇马羊\"\n  return s[year % 12]\n}\n\nfunction getIntervalDays(date) {\n  var now = new Date().getTime()\n  var ago = new Date(`${date.slice(0,4)} ${date.slice(4,6)} ${date.slice(6,8)}`).getTime()\n  var intervalDays = (now - ago) / 1000 / 3600 / 24\n  return parseInt(intervalDays, 10);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}